train <- train %>%
filter(build_year < 2020)
# year
train <- train %>%
mutate(year = year(timestamp))
# year_month
train <- train %>%
mutate(year_month = make_date(year(timestamp),month(timestamp)))
# month of year
train <- train %>%
mutate(month_of_year = month(train$timestamp))
# week of year
train <- train %>%
mutate(week_of_year = week(train$timestamp))
# day of month
train <- train %>%
mutate(day_of_month = mday(train$timestamp))
# weekday
train <- train %>%
mutate(day_of_week = wday(train$timestamp))
# number of floor from top of house
train <- train %>%
mutate(floor_from_top = max_floor - floor)
# relative position of floor in house
train <- train %>%
mutate(floor_by_maxfloor = floor/max_floor, floor_by_maxfloor=ifelse(floor_by_maxfloor>1,NA,floor_by_maxfloor))
# average room size
train <- train %>%
mutate(roomsize = (life_sq-kitch_sq)/num_room, roomsize=ifelse(roomsize<=0 | roomsize > 200, NA,roomsize))
# relative proportion of living area
train <- train %>%
mutate(life_proportion = life_sq/full_sq)
# relative proportion of kitchen area
train <- train %>%
mutate(kitchen_proportion = kitch_sq/full_sq)
# extra area
train <- train %>%
mutate(extra_floor = full_sq - life_sq)
# age of house at time of sale
train <- train %>%
mutate(age_at_sale = -interval(timestamp, make_date(year=build_year)) / years(1))
train %>%
group_by(year_month) %>%
summarize(n_sales = n())
train2 <- train %>%
group_by(year_month) %>%
summarize(n_sales = n()) %>%
right_join(train,by="year_month")
View(train2)
train %>%
group_by(sub_area) %>%
summarize(mean_price_raion = mean(price_doc))
train <- train %>%
group_by(sub_area) %>%
summarize(mean_price_raion = mean(price_doc)) %>%
right_join(train,by="sub_area")
View(train)
install.packages("treemap")
library(readr)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
orders <- read_csv('../input/orders.csv')
products <- read_csv('../input/products.csv')
order_products <- read_csv('../input/order_products__train.csv')
order_products_prior <- read_csv('../input/order_products__prior.csv')
aisles <- read_csv('../input/aisles.csv')
departments <- read_csv('../input/departments.csv')
options(tibble.width = Inf)
kable(head(orders,12))
str(orders, max.level=1)
kable(head(order_products,10))
str(order_products, max.level=1)
kable(head(products,10))
str(products, max.level=1)
kable(head(order_products_prior,10))
str(order_products_prior, max.level=1)
kable(head(aisles,10))
str(aisles, max.level=1)
kable(head(departments,10))
str(departments, max.level=1)
orders <- orders %>% mutate(order_hour_of_day = as.numeric(order_hour_of_day), eval_set = as.factor(eval_set))
products <- products %>% mutate(product_name = as.factor(product_name))
aisles <- aisles %>% mutate(aisle = as.factor(aisle))
departments <- departments %>% mutate(department = as.factor(department))
orders %>%
ggplot(aes(x=order_hour_of_day)) +
geom_histogram(stat="count",fill="red")
orders %>%
ggplot(aes(x=order_dow)) +
geom_histogram(stat="count",fill="red")
orders %>%
ggplot(aes(x=days_since_prior_order)) +
geom_histogram(stat="count",fill="red")
order_products %>%
group_by(order_id) %>%
summarize(n_items = last(add_to_cart_order)) %>%
ggplot(aes(x=n_items))+
geom_histogram(stat="count",fill="red") +
geom_rug()+
coord_cartesian(xlim=c(0,80))
order_products_prior %>%
group_by(order_id) %>%
summarize(n_items = last(add_to_cart_order)) %>%
ggplot(aes(x=n_items))+
geom_histogram(stat="count",fill="red") +
geom_rug() +
coord_cartesian(xlim=c(0,80))
tmp <- order_products %>%
group_by(product_id) %>%
summarize(count = n()) %>%
top_n(10, wt = count) %>%
left_join(select(products,product_id,product_name),by="product_id") %>%
arrange(desc(count))
kable(tmp)
tmp %>%
ggplot(aes(x=reorder(product_name,-count), y=count))+
geom_bar(stat="identity",fill="red")+
theme(axis.text.x=element_text(angle=90, hjust=1),axis.title.x = element_blank())
tmp <- order_products %>%
group_by(reordered) %>%
summarize(count = n()) %>%
mutate(reordered = as.factor(reordered)) %>%
mutate(proportion = count/sum(count))
kable(tmp)
tmp %>%
ggplot(aes(x=reordered,y=count,fill=reordered))+
geom_bar(stat="identity")
tmp <-order_products %>%
group_by(product_id) %>%
summarize(proportion_reordered = mean(reordered), n=n()) %>%
filter(n>40) %>%
top_n(10,wt=proportion_reordered) %>%
arrange(desc(proportion_reordered)) %>%
left_join(products,by="product_id")
kable(tmp)
tmp %>%
ggplot(aes(x=reorder(product_name,-proportion_reordered), y=proportion_reordered))+
geom_bar(stat="identity",fill="red")+
theme(axis.text.x=element_text(angle=90, hjust=1),axis.title.x = element_blank())+coord_cartesian(ylim=c(0.85,0.95))
tmp <- order_products %>%
group_by(product_id, add_to_cart_order) %>%
summarize(count = n()) %>% mutate(pct=count/sum(count)) %>%
filter(add_to_cart_order == 1, count>10) %>%
arrange(desc(pct)) %>%
left_join(products,by="product_id") %>%
select(product_name, pct, count) %>%
ungroup() %>%
top_n(10, wt=pct)
kable(tmp)
tmp %>%
ggplot(aes(x=reorder(product_name,-pct), y=pct))+
geom_bar(stat="identity",fill="red")+
theme(axis.text.x=element_text(angle=90, hjust=1),axis.title.x = element_blank())+coord_cartesian(ylim=c(0.4,0.7))
order_products %>%
left_join(orders,by="order_id") %>%
group_by(days_since_prior_order) %>%
summarize(mean_reorder = mean(reordered)) %>%
ggplot(aes(x=days_since_prior_order,y=mean_reorder))+
geom_bar(stat="identity",fill="red")
order_products %>%
group_by(product_id) %>%
summarize(proportion_reordered = mean(reordered), n=n()) %>%
ggplot(aes(x=n,y=proportion_reordered))+
geom_point()+
geom_smooth(color="red")+
coord_cartesian(xlim=c(0,2000))
products <- products %>% mutate(organic=ifelse(str_detect(products$product_name,'Organic'),"organic","not organic"), organic= as.factor(organic))
tmp <- order_products %>%
left_join(products, by="product_id") %>%
group_by(organic) %>%
summarize(count = n()) %>%
mutate(proportion = count/sum(count))
kable(tmp)
tmp %>%
ggplot(aes(x=organic,y=count, fill=organic))+
geom_bar(stat="identity")
tmp <- order_products %>% left_join(products,by="product_id") %>% group_by(organic) %>% summarize(mean_reordered = mean(reordered))
kable(tmp)
tmp %>%
ggplot(aes(x=organic,fill=organic,y=mean_reordered))+geom_bar(stat="identity")
library(treemap)
tmp <- products %>% group_by(department_id, aisle_id) %>% summarize(n=n())
tmp <- tmp %>% left_join(departments,by="department_id")
tmp <- tmp %>% left_join(aisles,by="aisle_id")
tmp2<-order_products %>%
group_by(product_id) %>%
summarize(count=n()) %>%
left_join(products,by="product_id") %>%
ungroup() %>%
group_by(department_id,aisle_id) %>%
summarize(sumcount = sum(count)) %>%
left_join(tmp, by = c("department_id", "aisle_id")) %>%
mutate(onesize = 1)
treemap(tmp2,index=c("department","aisle"),vSize="onesize",vColor="department",palette="Set3",title="",sortID="-sumcount", border.col="#FFFFFF",type="categorical", fontsize.legend = 0,bg.labels = "#FFFFFF")
treemap(tmp,index=c("department","aisle"),vSize="n",title="",palette="Set3",border.col="#FFFFFF")
orders
filter(orders,user_id==1)
filter(orders,user_id==2)
filter(orders,user_id==3)
filter(orders,user_id==4)
filter(orders,user_id==5)
filter(orders,user_id==6)
filter(orders,user_id==7)
filter(orders,user_id==8)
filter(orders,user_id==1)
filter(orders,user_id==1)$order_id
filter(order_products, order_id %in% filter(orders,user_id==1)$order_id)
filter(order_products_prior, order_id %in% filter(orders,user_id==1)$order_id)
1 %in% c(1,2)
order_products_prior
filter(order_products_prior, order_id %in% filter(orders,user_id==2)$order_id)
order_products$order_id %in% filter(orders,user_id==2)$order_id)
order_products$order_id %in% filter(orders,user_id==2)$order_id
sum(order_products$order_id %in% filter(orders,user_id==2)$order_id)
order_products[(order_products$order_id %in% filter(orders,user_id==2)$order_id)]
order_products[(order_products$order_id %in% filter(orders,user_id==2)$order_id),]
View(order_products[(order_products$order_id %in% filter(orders,user_id==2)$order_id),])
filter(orders,user_id==2)$order_id)
filter(orders,user_id==2)$order_id
c(1,0,2) == c(0,1,2)
unique(c(1,0,2)) == unique(c(0,1,2))
filter(orders,user_id==2)$order_id
order_products_prior[filter(orders,user_id==2)$order_id,]
order_products_prior[order_products_prior$order_id %in% filter(orders,user_id==2)$order_id,]
order_products_prior %>% filter(order_id %in% filter(orders,user_id==2)$order_id)
filter(orders,user_id==2)$order_id
22 %in% filter(orders,user_id==2)$order_id
order_products_prior %>% filter(order_id %in% select(filter(orders,user_id==2),order_id)
)
select(filter(orders,user_id==2),order_id)
select(filter(orders,user_id==2),order_id)[1]
select(filter(orders,user_id==2),order_id)[[1]
]
order_products_prior %>% filter(order_id %in% select(filter(orders,user_id==2),order_id)[[1]])
select(filter(orders,user_id==2),order_id)[[1]]
str(select(filter(orders,user_id==2),order_id)[[1]])
tmp <- select(filter(orders,user_id==2),order_id)[[1]])
tmp <- select(filter(orders,user_id==2),order_id)[[1]]
order_products_prior %>% filter(order_id %in% tmp
)
unlist(select(filter(orders,user_id==2),order_id))
str(unlist(select(filter(orders,user_id==2),order_id)))
order_products_prior %>% filter(order_id %in% unlist(select(filter(orders,user_id==2),order_id))
)
tmp
order_products_prior %>% filter(order_id %in% as.integer(unlist(select(filter(orders,user_id==2),order_id)))
)
order_products_prior %>% filter(order_id %in% tmp)
tmp
as.integer(unlist(select(filter(orders,user_id==2),order_id)))
order_products %>% summarize(m = mean(reordered))
order_products %>% group_by(order_id) %>% summarize(m = mean(reordered))
order_products %>% group_by(order_id) %>% summarize(m = mean(reordered)) %>% filter(m==1)
order_products %>% group_by(order_id) %>% summarize(m = mean(reordered),nproducts = n()) %>% filter(m==1)
orders
filter(orders, order_number > 1)
filter(orders, order_number == 2)
orders %>% group_by(user_id) %>% filter(order_number == 2) %>% right_join(order_products_prior,by="order_id")
orders %>% group_by(user_id) %>% filter(order_number == 2)
orders %>% group_by(user_id) %>% filter(order_number == 2, days_since_prior_order==7)
tmp <- orders %>% group_by(user_id) %>% filter(order_number == 2, days_since_prior_order==7)
tmp
order_products_prior %>% filter(order_id %in% tmp$order_id)
order_products_prior %>% filter(order_id %in% tmp$order_id) %>% left_join(tmp,by="order_id")
order_products_prior %>% filter(order_id %in% tmp$order_id) %>% left_join(tmp,by="order_id") %>% group_by(user_id) %>% summarize(m = mean(reordered))
order_products_prior %>% filter(order_id %in% tmp$order_id) %>% left_join(tmp,by="order_id") %>% group_by(user_id) %>% summarize(m = mean(reordered)) %>% filter(m==1)
order_products_prior %>% filter(user_id == 30)
orders %>% filter(user_id==30)
order_products_prior %>% group_by(order_id) %>% summarize(m = mean(reordered))
order_products_prior %>% group_by(order_id) %>% summarize(m = mean(reordered),n=n())
tmp <- order_products_prior %>% group_by(order_id) %>% summarize(m = mean(reordered),n=n()) %>% right_join(orders, by="order_id")
tmp
tmp %>% group_by(user_id) %>% summarize(n_equal = sum(m==1))
tmp %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T))
tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T))
tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n())
tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal == 1)
tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal > 0.7)
tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal > 0.9)
tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal > 0.9) %>% arrange(desc(percent_equal))
tmp
tmp <- order_products_prior %>% group_by(order_id) %>% summarize(m = mean(reordered),n=n()) %>% right_join(filter(orders,order_number==2), by="order_id")
tmp
tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal > 0.9) %>% arrange(desc(percent_equal))
tmp
tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal > 0.9) %>% arrange(desc(percent_equal))
tmp
filter(tmp,user_id==1)
tmp <- order_products_prior %>% group_by(order_id) %>% summarize(m = mean(reordered),n=n()) %>% right_join(filter(orders,order_number>2), by="order_id")
tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal > 0.9) %>% arrange(desc(percent_equal))
tmp2 <- tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal > 0.9) %>% arrange(desc(percent_equal))
tmp2
tmp2 %>% filter(n_equal > 3)
tmp2 %>% filter(n_equal > 10)
tmp2 %>% filter(n_equal > 5)
tmp2 %>% filter(n_equal > 5) %>% arrange(desc(n_equal))
tmp2 <- tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal > 0.9, n_equal > 5) %>% arrange(desc(percent_equal))
tmp2
tmp2 <- tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal == 1, n_equal > 5) %>% arrange(desc(percent_equal))
tmp2
tmp2 <- tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal == 1, n_equal > 2) %>% arrange(desc(percent_equal))
tmp2
tmp2 <- tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal == 1, n_equal > 2) %>% arrange(desc(n_equal))
tmp2
tmp <- order_products_prior %>% group_by(order_id) %>% summarize(m = mean(reordered),n=n())
tmp <- order_products_prior %>% group_by(order_id) %>% summarize(m = mean(reordered),n=n())
tmp2 <- tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal == 1, n_equal > 2) %>% arrange(desc(n_equal))
tmp
tmp <- order_products_prior %>% group_by(order_id) %>% summarize(m = mean(reordered),n=n()) %>% right_join(filter(orders,order_number>2), by="order_id")
tmp
filter(tmp, user_id == 99753)
order_products_prior %>% filter(order_id %in% 1849591)
order_products_prior %>% filter(order_id %in% 1849591) %>% left_join(products, by="product_id")
View(filter(tmp, user_id == 99753))
filter(tmp, user_id == 99753)
filter(tmp, user_id == 99753)$order_id
uniqueorders <- filter(tmp, user_id == 99753)$order_id
order_products_prior %>% filter(order_id %in% uniqueorders) %>% left_join(products, by="product_id")
tmp <- order_products_prior %>% group_by(order_id) %>% summarize(m = mean(reordered),n=n()) %>% right_join(filter(orders,order_number>2), by="order_id")
tmp2 <- tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal == 1, n_equal > 2) %>% arrange(desc(n_equal))
kable(tmp2)
cat('Number of customers, always reordering: %i', nrow(tmp2))
cat('Number of customers, always reordering: ', nrow(tmp2))
tmp <- order_products_prior %>% group_by(order_id) %>% summarize(m = mean(reordered),n=n()) %>% right_join(filter(orders,order_number>2), by="order_id")
tmp2 <- tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal == 1, n_equal > 2) %>% arrange(desc(n_equal))
kable(tmp2)
cat('Number of customers, always reordering: ', nrow(tmp2))
cat('Number of customers, always reordering: ', nrow(tmp2))
tmp2
uniqueorders <- filter(tmp, user_id == 99753)$order_id
tmp <- order_products_prior %>% filter(order_id %in% uniqueorders) %>% left_join(products, by="product_id")
tmp
order_products
order %>% filter(user_id==99753)
orders %>% filter(user_id==99753)
orders %>% filter(user_id==99753, eval_set != "prior")
orders %>% filter(user_id==99753, eval_set == "train")
tmp <- orders %>% filter(user_id==99753, eval_set == "train")
order_products %>%  filter(order_id == tmp$order_id)
order_products %>%  filter(order_id == tmp$order_id) %>% left_join(products, by="product_id")
tmp <- orders %>% filter(user_id==99753, eval_set == "train")
tmp2 <- order_products %>%  filter(order_id == tmp$order_id) %>% left_join(products, by="product_id")
kable(tmp2)
datatable(tmp)
install.packages("DT")
library(DT)
uniqueorders <- filter(tmp, user_id == 99753)$order_id
tmp <- order_products_prior %>% filter(order_id %in% uniqueorders) %>% left_join(products, by="product_id")
datatable(tmp)
uniqueorders <- filter(tmp, user_id == 99753)$order_id
tmp <- order_products_prior %>% filter(order_id %in% uniqueorders) %>% left_join(products, by="product_id")
datatable(select(tmp,-aisle_id,-department_id)
uniqueorders <- filter(tmp, user_id == 99753)$order_id
tmp <- order_products_prior %>% filter(order_id %in% uniqueorders) %>% left_join(products, by="product_id")
datatable(select(tmp,-aisle_id,-department_id))
tmp <- order_products_prior %>% filter(order_id %in% uniqueorders) %>% left_join(products, by="product_id")
datatable(select(tmp,-aisle_id,-department_id))
tmp
datatable(select(tmp,-aisle_id,-department_id))
tmp <- order_products_prior %>% group_by(order_id) %>% summarize(m = mean(reordered),n=n()) %>% right_join(filter(orders,order_number>2), by="order_id")
uniqueorders <- filter(tmp, user_id == 99753)$order_id
tmp <- order_products_prior %>% filter(order_id %in% uniqueorders) %>% left_join(products, by="product_id")
datatable(select(tmp,-aisle_id,-department_id,-organic), class="table-condensed")
tmp <- order_products_prior %>% group_by(order_id) %>% summarize(m = mean(reordered),n=n()) %>% right_join(filter(orders,order_number>2), by="order_id")
tmp2 <- tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal == 1, n_equal > 2) %>% arrange(desc(n_equal))
tmp2
tmp <- order_products_prior %>% group_by(order_id) %>% summarize(m = mean(reordered),n=n()) %>% right_join(filter(orders,order_number>2), by="order_id")
tmp2 <- tmp %>% filter(eval_set =="prior") %>% group_by(user_id) %>% summarize(n_equal = sum(m==1,na.rm=T), percent_equal = n_equal/n()) %>% filter(percent_equal == 1, n_equal > 2) %>% arrange(desc(n_equal))
datatable(tmp2, class="table-condensed", options = list(dom = 'tp'))
uniqueorders <- filter(tmp, user_id == 99753)$order_id
tmp <- order_products_prior %>% filter(order_id %in% uniqueorders) %>% left_join(products, by="product_id")
datatable(select(tmp,-aisle_id,-department_id,-organic), class="table-condensed", options = list(dom = 'tp'))
tmp <- orders %>% filter(user_id==99753, eval_set == "train")
tmp2 <- order_products %>%  filter(order_id == tmp$order_id) %>% left_join(products, by="product_id")
datatable(select(tmp,-aisle_id,-department_id,-organic), class="table-condensed", options = list(dom = 'tp'))
tmp2
datatable(select(tmp2,-aisle_id,-department_id,-organic), class="table-condensed", options = list(dom = 'tp'))
setwd("D:/Eigene Dateien/sonstiges/Kaggle/Sberbank/script")
install.packages("data.table")
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(dplyr)
library(lubridate)
library(stringr)
train <- fread('../input/train.csv')
train <- train %>%
mutate(max_floor = as.numeric(max_floor), kitch_sq=as.numeric(kitch_sq), num_room=as.numeric(num_room), build_year=as.numeric(build_year), sub_area=as.factor(sub_area))
train <- train %>%
filter(build_year < 2020)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(data.table)
library(dplyr)
library(lubridate)
library(stringr)
train <- fread('../input/train.csv')
library(data.table)
library(dplyr)
library(lubridate)
library(stringr)
train <- fread('../input/train.csv')
train <- train %>%
mutate(max_floor = as.numeric(max_floor), kitch_sq=as.numeric(kitch_sq), num_room=as.numeric(num_room), build_year=as.numeric(build_year), sub_area=as.factor(sub_area))
train <- train %>%
filter(build_year < 2020)
# year
train <- train %>%
mutate(year = year(timestamp))
# year_month
train <- train %>%
mutate(year_month = make_date(year(timestamp),month(timestamp)))
# month of year
train <- train %>%
mutate(month_of_year = month(train$timestamp))
# week of year
train <- train %>%
mutate(week_of_year = week(train$timestamp))
# day of month
train <- train %>%
mutate(day_of_month = mday(train$timestamp))
# weekday
train <- train %>%
mutate(day_of_week = wday(train$timestamp))
# number of floors to the top of house
train <- train %>%
mutate(floor_from_top = max_floor - floor)
# relative position of floor in house
train <- train %>%
mutate(floor_by_maxfloor = floor/max_floor)
# average room size
train <- train %>%
mutate(roomsize = (life_sq-kitch_sq)/num_room)
# relative proportion of living area
train <- train %>%
mutate(life_proportion = life_sq/full_sq)
# relative proportion of kitchen area
train <- train %>%
mutate(kitchen_proportion = kitch_sq/full_sq)
# extra area
train <- train %>%
mutate(extra_area = full_sq - life_sq)
# age of house at time of sale
train <- train %>%
mutate(age_at_sale = interval(make_date(year=build_year),timestamp) / years(1))
# number of sales per year_month
train <- train %>%
group_by(year_month) %>%
summarize(n_sales_permonth = n()) %>%
right_join(train,by="year_month")
# Longitude and Latitude
library(rgdal) # read the shapefile with readOGR()
shp <- readOGR(dsn = "./input/administrative-divisions-of-moscow", layer = "moscow_adm")
# average price per raion
train <- train %>%
group_by(sub_area) %>%
summarize(mean_price_raion = mean(price_doc)) %>%
right_join(train,by="sub_area")
# average price per raion per year
train <- train %>%
group_by(sub_area, year) %>%
summarize(mean_price_raion_year = mean(price_doc)) %>%
right_join(train,by="sub_area")
# average price per sqm per raion
train <- train %>%
group_by(sub_area) %>%
summarize(mean_price_persqm_raion = mean(price_doc/full_sq, na.rm=T)) %>%
right_join(train,by="sub_area")
# Longitude and Latitude
library(rgdal) # read the shapefile with readOGR()
shp <- readOGR(dsn = "./input/administrative-divisions-of-moscow", layer = "moscow_adm")
# Longitude and Latitude
library(rgdal) # read the shapefile with readOGR()
shp <- readOGR(dsn = "../input/administrative-divisions-of-moscow", layer = "moscow_adm")
centroids <- coordinates(shp)
sub_area <- shp$RAION
okrug <- shp$OKRUGS
location_data <- data.frame(sub_area = sub_area, okrug = okrug, longitude=centroids[,1], latitude=centroids[,2])
train <- train %>%
left_join(location_data,by="sub_area")
# Calculate distance from Kremlin for each sub_area
library(geosphere)
install.packages("geosphere")
# Longitude and Latitude
library(rgdal) # read the shapefile with readOGR()
shp <- readOGR(dsn = "../input/administrative-divisions-of-moscow", layer = "moscow_adm")
centroids <- coordinates(shp)
sub_area <- shp$RAION
okrug <- shp$OKRUGS
location_data <- data.frame(sub_area = sub_area, okrug = okrug, longitude=centroids[,1], latitude=centroids[,2])
train <- train %>%
left_join(location_data,by="sub_area")
# Calculate distance from Kremlin for each sub_area
library(geosphere)
kremlin = data.frame(longitude = 37.617664,latitude = 55.752121)
train <- train %>%
group_by(sub_area) %>%
top_n(n = 1, wt=id) %>%
ungroup %>%
mutate(distance_from_kremlin = distm(.[c("longitude","latitude")], kremlin, fun=distHaversine)) %>%
right_join(train, by="sub_area")
kremlin = data.frame(longitude = 37.617664,latitude = 55.752121)
train <- train %>%
group_by(sub_area) %>%
top_n(n = 1, wt=id) %>%
ungroup %>%
mutate(distance_from_kremlin = distm(.[c("longitude","latitude")], kremlin, fun=distHaversine)) %>%
right_join(train, by="sub_area")
train
