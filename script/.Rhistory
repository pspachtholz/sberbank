area_shed = yardbuildingsqft26,
build_year = yearbuilt
)
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(ggmap)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
transactions <- fread('../input/train_2016.csv', showProgress = FALSE)
sample_submission <- fread('../input/sample_submission.csv')
options(tibble.width = Inf)
datatable(head(properties,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(transactions,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(sample_submission,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
properties <- properties %>% rename(
aircon = airconditioningtypeid,
architectural_style= architecturalstyletypeid,
area_basement = basementsqft,
num_bathroom = bathroomcnt,
num_bedroom = bedroomcnt,
quality = buildingqualitytypeid,
framing = buildingclasstypeid,
num_bathroom_calc = calculatedbathnbr,
deck = decktypeid,
num_bath = fullbathcnt,
num_75_bath = threequarterbathnbr,
area_firstfloor_finished = finishedfloor1squarefeet,
area_total_calc = calculatedfinishedsquarefeet,
area_base = finishedsquarefeet6,
area_live_finished = finishedsquarefeet12,
area_liveperi_finished = finishedsquarefeet13,
area_total_finished = finishedsquarefeet15,
area_unknown = finishedsquarefeet50,
num_fireplace = fireplacecnt,
flag_fireplace = fireplaceflag,
num_garage = garagecarcnt,
area_garage = garagetotalsqft,
flag_tub = hashottuborspa,
heating = heatingorsystemtypeid,
area_lot = lotsizesquarefeet,
num_level = numberofstories,
num_pool = poolcnt,
area_pool = poolsizesum,
region_county = regionidcity,
region_city = regionidcity,
region_zip = regionidzip,
region_neighbor = regionidneighborhood,
num_units = unitcnt,
area_patio = yardbuildingsqft17,
area_shed = yardbuildingsqft26,
build_year = yearbuilt
)
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(ggmap)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(ggmap)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
transactions <- fread('../input/train_2016.csv', showProgress = FALSE)
sample_submission <- fread('../input/sample_submission.csv')
options(tibble.width = Inf)
datatable(head(properties,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(transactions,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(sample_submission,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(ggmap)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
transactions <- fread('../input/train_2016.csv', showProgress = FALSE)
sample_submission <- fread('../input/sample_submission.csv')
options(tibble.width = Inf)
datatable(head(properties,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(transactions,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(sample_submission,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
properties <- properties %>% rename(
aircon = airconditioningtypeid,
architectural_style= architecturalstyletypeid,
area_basement = basementsqft,
area_patio = yardbuildingsqft17,
area_shed = yardbuildingsqft26,
area_pool = poolsizesum,
area_lot = lotsizesquarefeet,
area_garage = garagetotalsqft,
area_firstfloor_finished = finishedfloor1squarefeet,
area_total_calc = calculatedfinishedsquarefeet,
area_base = finishedsquarefeet6,
area_live_finished = finishedsquarefeet12,
area_liveperi_finished = finishedsquarefeet13,
area_total_finished = finishedsquarefeet15,
area_unknown = finishedsquarefeet50,
num_units = unitcnt,
num_level = numberofstories,
num_room = roomcnt,
num_bathroom = bathroomcnt,
num_bedroom = bedroomcnt,
num_bathroom_calc = calculatedbathnbr,
num_bath = fullbathcnt,
num_75_bath = threequarterbathnbr,
num_fireplace = fireplacecnt,
num_pool = poolcnt,
num_garage = garagecarcnt,
flag_fireplace = fireplaceflag,
flag_tub = hashottuborspa,
quality = buildingqualitytypeid,
framing = buildingclasstypeid,
deck = decktypeid,
heating = heatingorsystemtypeid,
region_county = regionidcity,
region_city = regionidcity,
region_zip = regionidzip,
region_neighbor = regionidneighborhood,
build_year = yearbuilt
)
transactions %>% ggplot(aes(x=logerror)) + geom_histogram(bins=400, fill="red")+theme_bw()+theme(axis.title = element_text(size=16),axis.text = element_text(size=14))+ylab("Count")+coord_cartesian(x=c(-0.5,0.5))
missing_values <- properties %>% summarize_each(funs(sum(is.na(.))/n()))
missing_values <- gather(missing_values, key="feature", value="missing_pct")
missing_values %>% ggplot(aes(x=reorder(feature,-missing_pct),y=missing_pct)) +geom_bar(stat="identity",fill="red")+coord_flip()+theme_bw()
tmp <- transactions %>%  left_join(properties, by="parcelid")
vars <- c("num_bathroom", "num_bedroom", "num_bath", "num_room", "num_unit")
tmp <- tmp %>% select(one_of(c(vars,"logerror")))
corrplot(cor(tmp, use='complete.obs'))
tmp <- transactions %>%  left_join(properties, by="parcelid")
vars <- c("area_total_calc", "area_live_finished", "area_firstfloor_finished")
tmp <- tmp %>% select(one_of(c(vars,"logerror")))
corrplot(cor(tmp, use='complete.obs'))
library(data.table)
library(dplyr)
library(ggplot2)
library(knitr)
library(stringr)
library(DT)
library(tidyr)
library(corrplot)
library(ggmap)
properties <- fread('../input/properties_2016.csv', showProgress = FALSE)
transactions <- fread('../input/train_2016.csv', showProgress = FALSE)
sample_submission <- fread('../input/sample_submission.csv')
options(tibble.width = Inf)
datatable(head(properties,100), style="bootstrap", class="table-condensed")
datatable(head(transactions,100), style="bootstrap", class="table-condensed", options = list(dom = 'tp'))
datatable(head(sample_submission,100), style="bootstrap", class="table-condensed")
properties <- properties %>% rename(
aircon = airconditioningtypeid,
architectural_style= architecturalstyletypeid,
area_basement = basementsqft,
area_patio = yardbuildingsqft17,
area_shed = yardbuildingsqft26,
area_pool = poolsizesum,
area_lot = lotsizesquarefeet,
area_garage = garagetotalsqft,
area_firstfloor_finished = finishedfloor1squarefeet,
area_total_calc = calculatedfinishedsquarefeet,
area_base = finishedsquarefeet6,
area_live_finished = finishedsquarefeet12,
area_liveperi_finished = finishedsquarefeet13,
area_total_finished = finishedsquarefeet15,
area_unknown = finishedsquarefeet50,
num_units = unitcnt,
num_story = numberofstories,
num_room = roomcnt,
num_bathroom = bathroomcnt,
num_bedroom = bedroomcnt,
num_bathroom_calc = calculatedbathnbr,
num_bath = fullbathcnt,
num_75_bath = threequarterbathnbr,
num_fireplace = fireplacecnt,
num_pool = poolcnt,
num_garage = garagecarcnt,
flag_fireplace = fireplaceflag,
flag_tub = hashottuborspa,
quality = buildingqualitytypeid,
framing = buildingclasstypeid,
material = typeconstructiontypeid,
deck = decktypeid,
story = storytypeid,
heating = heatingorsystemtypeid,
region_county = regionidcounty,
region_city = regionidcity,
region_zip = regionidzip,
region_neighbor = regionidneighborhood,
build_year = yearbuilt,
id_parcel = parcelid
)
transactions %>% ggplot(aes(x=logerror)) + geom_histogram(bins=400, fill="red")+theme_bw()+theme(axis.title = element_text(size=16),axis.text = element_text(size=14))+ylab("Count")+coord_cartesian(x=c(-0.5,0.5))
missing_values <- properties %>% summarize_each(funs(sum(is.na(.))/n()))
missing_values <- gather(missing_values, key="feature", value="missing_pct")
missing_values %>% ggplot(aes(x=reorder(feature,-missing_pct),y=missing_pct)) +geom_bar(stat="identity",fill="red")+coord_flip()+theme_bw()
tmp <- transactions %>%  left_join(properties, by="id_parcel")
transactions <- transactions %>% rename(
id_parcel = parcelid
)
unlink('C:/Users/LocalAdmin/Desktop/Eigene Dateien/sonstiges/Kaggle/zillow/script/EDA_Zillow_cache', recursive = TRUE)
setwd("C:/Users/LocalAdmin/Desktop/Eigene Dateien/sonstiges/Kaggle/sberbank/script")
library(data.table)
library(dplyr)
library(lubridate)
library(stringr)
library(caret)
library(Matrix)
library(xgboost)
library(geosphere)
library(rgdal)
train <- fread('../input/train.csv')
test <- fread('../input/test.csv')
test_id <- test$id
train %>% count(price_doc) %>% filter(price_doc <= 3000000) %>% arrange(desc(n))
#potentially remove these rows from train set
train <- train %>% mutate(strange_price = ifelse(price_doc %in% c(990000,999000,1000000,1100000,2000000,3000000), 1,0))
train <- train %>% filter(price_doc <= 1e08)
train <- train %>% mutate(full_sq = ifelse(full_sq > 1000, full_sq/100, full_sq))
train <- train %>% mutate(full_sq = ifelse(full_sq > 100 & product_type=="OwnerOccupier" & num_room <= 2, full_sq/10, full_sq))
train <- train %>% mutate(full_sq = ifelse(full_sq > 300 & product_type=="Investment", full_sq/10, full_sq))
test <- test %>% mutate(full_sq = ifelse(full_sq > 300 & product_type=="OwnerOccupier" & num_room <= 2, full_sq/10, full_sq))
train <- train %>% mutate(strange_full_sq = ifelse(full_sq <= 9, full_sq+1,0), full_sq = ifelse(full_sq <= 9, NA, full_sq))
test <- test %>% mutate(strange_full_sq = ifelse(full_sq <= 9, full_sq+1,0), full_sq = ifelse(full_sq <= 9, NA, full_sq))
View(train)
train <- train %>% mutate(is.train = 1)
test <- test %>% mutate(is.train = 0)
full <- bind_rows(train,test)
full %>% ggplot(aes(x=full_sq, color=is.train)) %>% stat_density(geom="line")
full %>% ggplot(aes(x=full_sq, color=is.train)) + stat_density(geom="line")
full %>% ggplot(aes(x=full_sq, color=is.train)) + stat_density(aes(color=is.train), geom="line")
full %>% ggplot(aes(x=full_sq, color=is.train)) + geom_line(stat="density", aes(color=is.train)
)
full %>% ggplot(aes(x=full_sq, group=is.train)) + geom_line(stat="density", aes(color=is.train)
)
full <- full %>% mutate(is.train = factor(is.train))
full %>% ggplot(aes(x=full_sq, group=is.train)) + geom_line(stat="density", aes(color=is.train)
)
full %>% ggplot(aes(x=full_sq, group=is.train)) + geom_line(stat="density", aes(color=is.train)+geom_rug()
)
full %>% ggplot(aes(x=full_sq, group=is.train)) + geom_line(stat="density", aes(color=is.train))+geom_rug()
full %>% ggplot(aes(x=full_sq, group=is.train)) + geom_line(stat="density", aes(color=is.train),size=1.2)
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=is.train),size=1.2)
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=is.train, linetype=product_type),size=1.2)
train <- train %>% mutate(train_test = "train")
test <- test %>% mutate(train_test = "test")
full <- bind_rows(train,test)
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test, linetype=product_type),size=1.2)
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test, linetype=product_type),size=1.2)+coord_cartesian(xlim=0,150)
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test, linetype=product_type),size=1.2)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test, linetype=product_type),size=1.2)+coord_cartesian(xlim=c(0,125))
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test, linetype=product_type),size=1.2)+coord_cartesian(xlim=c(10,125))
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test),size=1.2)+coord_cartesian(xlim=c(10,125))+facet_grid(~product_type)
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test),size=1.2)+coord_cartesian(xlim=c(10,125))+facet_grid(product_type~)
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test),size=1.2)+coord_cartesian(xlim=c(10,125))+facet_grid(product_type~.)
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test),size=1.2)+facet_grid(product_type~.)
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test),size=1.2)+geom_rug()+facet_grid(product_type~.)
str(test$product_type)
str(as.factor(test$product_type))
train <- train %>% mutate(product_type = factor(product_type, exclude=NULL))
test <- test %>% mutate(product_type = ifelse(is.na(product_type),"Investment",product_type))
test <- test %>% mutate(product_type = factor(product_type))
train <- train %>% mutate(sub_area = factor(sub_area, exclude=NULL))
test <- test %>% mutate(sub_area = factor(sub_area, exclude=NULL)) # only 145 Poselenie Klenovskoe not in test set
train <- train %>% mutate(school_education_centers_raion_pct = school_education_centers_raion/area_m*1e+06)
test <- test %>% mutate(school_education_centers_raion_pct = school_education_centers_raion/area_m*1e+06)
train <- train %>% mutate(school_education_centers_top_20_raion = ifelse(school_education_centers_top_20_raion>=1,1,0))
test <- test %>% mutate(school_education_centers_top_20_raion = ifelse(school_education_centers_top_20_raion>=1,1,0))
train <- train %>% mutate(hospital_beds_raion_pct = hospital_beds_raion/raion_popul)
test <- test %>% mutate(hospital_beds_raion_pct = hospital_beds_raion/raion_popul)
train <- train %>% mutate(healthcare_centers_raion_pct = healthcare_centers_raion/area_m*1e+06)
test <- test %>% mutate(healthcare_centers_raion_pct = healthcare_centers_raion/area_m*1e+06)
train <- train %>% mutate(university_top_20_raion = ifelse(university_top_20_raion>=1,1,0))
test <- test %>% mutate(university_top_20_raion = ifelse(university_top_20_raion>=1,1,0))
train <- train %>% mutate(sport_objects_raion_pct = sport_objects_raion/area_m*1e+06)
test <- test %>% mutate(sport_objects_raion_pct = sport_objects_raion/area_m*1e+06)
train <- train %>% mutate(additional_education_raion_pct = additional_education_raion/area_m*1e+06)
test <- test %>% mutate(additional_education_raion_pct = additional_education_raion/area_m*1e+06)
train <- train %>% mutate(culture_objects_top_25 = NULL, culture_objects_top_25_raion = ifelse(culture_objects_top_25_raion >=2, 2, ifelse(culture_objects_top_25_raion>=1,1,0)))
test <- test %>% mutate(culture_objects_top_25 = NULL, culture_objects_top_25_raion = ifelse(culture_objects_top_25_raion >=2, 2, ifelse(culture_objects_top_25_raion>=1,1,0)))
train <- train %>% mutate(shopping_centers_raion_pct = shopping_centers_raion/area_m*1e+06)
test <- test %>% mutate(shopping_centers_raion_pct = shopping_centers_raion/area_m*1e+06)
train <- train %>% mutate(office_raion = office_raion/area_m*1e+06)
test <- test %>% mutate(office_raion = office_raion/area_m*1e+06)
train <- train %>% mutate(thermal_power_plant_raion = as.numeric(as.factor(thermal_power_plant_raion)))
test <- test %>% mutate(thermal_power_plant_raion = as.numeric(as.factor(thermal_power_plant_raion)))
train <- train %>% mutate(incineration_raion = as.numeric(as.factor(incineration_raion)))
test <- test %>% mutate(incineration_raion = as.numeric(as.factor(incineration_raion)))
train <- train %>% mutate(oil_chemistry_raion = as.numeric(as.factor(oil_chemistry_raion)))
test <- test %>% mutate(oil_chemistry_raion = as.numeric(as.factor(oil_chemistry_raion)))
train <- train %>% mutate(radiation_raion = as.numeric(as.factor(radiation_raion)))
test <- test %>% mutate(radiation_raion = as.numeric(as.factor(radiation_raion)))
train <- train %>% mutate(railroad_terminal_raion = as.numeric(as.factor(railroad_terminal_raion)))
test <- test %>% mutate(railroad_terminal_raion = as.numeric(as.factor(railroad_terminal_raion)))
train <- train %>% mutate(big_market_raion = as.numeric(as.factor(big_market_raion)))
test <- test %>% mutate(big_market_raion = as.numeric(as.factor(big_market_raion)))
train <- train %>% mutate(nuclear_reactor_raion = as.numeric(as.factor(nuclear_reactor_raion)))
test <- test %>% mutate(nuclear_reactor_raion = as.numeric(as.factor(nuclear_reactor_raion)))
train <- train %>% mutate(detention_facility_raion = as.numeric(as.factor(detention_facility_raion)))
test <- test %>% mutate(detention_facility_raion = as.numeric(as.factor(detention_facility_raion)))
train <- train %>% mutate(train_test = "train")
test <- test %>% mutate(train_test = "test")
full <- bind_rows(train,test)
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test),size=1.2)+geom_rug()+facet_grid(product_type~.)
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test),size=1.2)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(10,200))
full %>% ggplot(aes(x=life_sq)) + geom_line(stat="density", aes(color=train_test),size=1.2)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(10,200))
full %>% ggplot(aes(x=life_sq)) + geom_line(stat="density", aes(color=train_test),size=1.2)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=life_sq)) + geom_line(stat="density", aes(color=train_test),size=1.2, na.rm=T)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=life_sq)) + stat_density(geom="line", aes(color=train_test),size=1.2, na.rm=T)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=life_sq)) + stat_density(geom="line", aes(group=train_test,color=train_test),size=1.2, na.rm=T)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=life_sq)) + stat_density(geom="line", aes(group=train_test,color=train_test, position="identity"),size=1.2, na.rm=T)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=life_sq)) + stat_density(geom="line", aes(group=train_test,color=train_test, position="dodge"),size=1.2, na.rm=T)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=life_sq)) + geom_density(aes(group=train_test,color=train_test, position="dodge"),size=1.2, na.rm=T)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=life_sq)) + geom_density(aes(group=train_test,color=train_test),size=1.2, na.rm=T)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=life_sq)) + geom_density(aes(group=train_test,fill=train_test),size=1.2, na.rm=T)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=life_sq)) + stat_density(geom="line", aes(group=train_test,color=train_test),size=1.2, na.rm=T)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
?geom_density
full %>% ggplot(aes(x=life_sq)) + stat_density(geom="line", aes(group=train_test,color=train_test),size=1.2,trim=TRUE, na.rm=T)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=life_sq)) + stat_density(geom="line", aes(group=train_test,color=train_test),size=1.2,trim=TRUE, na.rm=T)+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test),size=1.2, trim=T)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(10,200))
full %>% ggplot(aes(x=life_sq)) + stat_density(geom="line", aes(group=train_test,color=train_test),size=1.2,na.rm=T)+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=life_sq)) + stat_density(geom="line", aes(group=train_test,color=train_test),size=1.2,na.rm=T)+facet_grid(product_type~.)
train <- train %>% mutate(life_sq = ifelse(life_sq > 1000, life_sq/100, life_sq))
train <- train %>% mutate(life_sq = ifelse(life_sq/10==full_sq, life_sq/10, life_sq))
train <- train %>% mutate(life_sq = ifelse((full_sq >0 & life_sq/full_sq > 4), life_sq/10, life_sq))
test <- test %>% mutate(life_sq = ifelse(life_sq/10==full_sq, life_sq/10, life_sq))
test <- test %>% mutate(life_sq = ifelse((full_sq >0 & life_sq/full_sq > 4), life_sq/10, life_sq))
### swapped vlaues between life and full_sq
train[train$life_sq>train$full_sq & !(is.na(train$life_sq) | is.na(train$full_sq)),c("full_sq","life_sq")]<- train[train$life_sq>train$full_sq & !(is.na(train$life_sq) | is.na(train$full_sq)),c("life_sq","full_sq")]
test[test$life_sq>test$full_sq & !(is.na(test$life_sq) | is.na(test$full_sq)),c("full_sq","life_sq")]<- test[test$life_sq>test$full_sq & !(is.na(test$life_sq) | is.na(test$full_sq)),c("life_sq","full_sq")]
train <- train %>% mutate(strange_life_sq = ifelse(life_sq < 7, life_sq+1,0), life_sq = ifelse(life_sq <= 1, NA, life_sq))
test <- test %>% mutate(strange_life_sq = ifelse(life_sq <= 1, life_sq+1,0), strange_life_sq= ifelse(is.na(strange_life_sq),0,strange_life_sq), life_sq = ifelse(life_sq <= 1, NA, life_sq))
full %>% ggplot(aes(x=life_sq)) + stat_density(geom="line", aes(group=train_test,color=train_test),size=1.2,na.rm=T)+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=life_sq)) + stat_density(geom="line", aes(group=train_test,color=train_test),size=1.2,na.rm=T, trim=T)+facet_grid(product_type~.)+coord_cartesian(xlim=c(0,150))
full %>% ggplot(aes(x=life_sq)) + stat_density(geom="line", aes(group=train_test,color=train_test),size=1.2,na.rm=T, trim=T)+facet_grid(product_type~.)
range(train$life_sq)
range(train$life_sq,na.rm=T)
range(test$life_sq,na.rm=T)
str(train$life_sq)
as.double(train$life_sq)
train$life_sq <- as.double(train$life_sq)
train <- train %>% mutate(train_test = "train")
test <- test %>% mutate(train_test = "test")
full <- bind_rows(train,test)
full %>% ggplot(aes(x=full_sq)) + geom_line(stat="density", aes(color=train_test),size=1.2, trim=T)+geom_rug()+facet_grid(product_type~.)+coord_cartesian(xlim=c(10,200))
full %>% ggplot(aes(x=life_sq)) + stat_density(geom="line", aes(group=train_test,color=train_test),size=1.2,na.rm=T, trim=T)+facet_grid(product_type~.)
glimpse(test)
sapply(test,is.double)
train %>% mutate_if(!is.double & is.double(test[[name(.)]]),as.double)
train %>% mutate_if(!is.double(.) & is.double(test[[name(.)]]),as.double)
train %>% mutate_if(!is.double(.) & is.double(test[[names(.)]]),as.double)
sapply(test,is.double) & sapply(train, !is.double)
sapply(test,is.double) & sapply(train, ~is.double)
sapply(test,is.double) & sapply(train, !(is.double))
sapply(test,is.double) & sapply(train, function(x) !is.double(x)))
sapply(test,is.double) & sapply(train, function(x) !is.double(x))
sapply(train, function(x) !is.double(x))
str(train)
is.double(train$full_sq)
as.double(train$full_sq)
is.numeric(train$full_sq)
is.numeric(test$full_sq)
?is.double
typeof(test$full_sq)
typeof(train$full_sq)
glimpse(train)
is.double(train$kitch_sq)
train[sapply(test,is.double) & sapply(train, function(x) !is.double(x))]
sapply(test,is.double)
train[,sapply(test,is.double) & sapply(train, function(x) !is.double(x))]
names(test[sapply(test,is.double)])
c(names(test[,sapply(test,is.double)]),names(train[,sapply(train,function(x) !is.double(x))]))
duplicated(c(names(test[,sapply(test,is.double)]),names(train[,sapply(train,function(x) !is.double(x))])))
names(train[,sapply(train,function(x) !is.double(x))])
names(test[,sapply(test,is.double)])
duplicated(c(names(test[,sapply(test,is.double)]),names(train[,sapply(train,function(x) !is.double(x))])))
library(data.table)
library(dplyr)
library(lubridate)
library(stringr)
library(caret)
library(Matrix)
library(xgboost)
library(geosphere)
library(rgdal)
train <- fread('../input/train.csv')
test <- fread('../input/test.csv')
test_id <- test$id
train %>% count(price_doc) %>% filter(price_doc <= 3000000) %>% arrange(desc(n))
#potentially remove these rows from train set
train <- train %>% mutate(strange_price = ifelse(price_doc %in% c(990000,999000,1000000,1100000,2000000,3000000), 1,0))
train <- train %>% filter(price_doc <= 1e08)
train <- train %>% mutate(full_sq = ifelse(full_sq > 1000, full_sq/100, full_sq))
train <- train %>% mutate(full_sq = ifelse(full_sq > 100 & product_type=="OwnerOccupier" & num_room <= 2, full_sq/10, full_sq))
train <- train %>% mutate(full_sq = ifelse(full_sq > 300 & product_type=="Investment", full_sq/10, full_sq))
test <- test %>% mutate(full_sq = ifelse(full_sq > 300 & product_type=="OwnerOccupier" & num_room <= 2, full_sq/10, full_sq))
train <- train %>% mutate(strange_full_sq = ifelse(full_sq <= 9, full_sq+1,0), full_sq = ifelse(full_sq <= 9, NA, full_sq))
test <- test %>% mutate(strange_full_sq = ifelse(full_sq <= 9, full_sq+1,0), full_sq = ifelse(full_sq <= 9, NA, full_sq))
train <- train %>% mutate(life_sq = ifelse(life_sq > 1000, life_sq/100, life_sq))
train <- train %>% mutate(life_sq = ifelse(life_sq/10==full_sq, life_sq/10, life_sq))
train <- train %>% mutate(life_sq = ifelse((full_sq >0 & life_sq/full_sq > 4), life_sq/10, life_sq))
test <- test %>% mutate(life_sq = ifelse(life_sq/10==full_sq, life_sq/10, life_sq))
test <- test %>% mutate(life_sq = ifelse((full_sq >0 & life_sq/full_sq > 4), life_sq/10, life_sq))
### swapped vlaues between life and full_sq
train[train$life_sq>train$full_sq & !(is.na(train$life_sq) | is.na(train$full_sq)),c("full_sq","life_sq")]<- train[train$life_sq>train$full_sq & !(is.na(train$life_sq) | is.na(train$full_sq)),c("life_sq","full_sq")]
test[test$life_sq>test$full_sq & !(is.na(test$life_sq) | is.na(test$full_sq)),c("full_sq","life_sq")]<- test[test$life_sq>test$full_sq & !(is.na(test$life_sq) | is.na(test$full_sq)),c("life_sq","full_sq")]
train <- train %>% mutate(strange_life_sq = ifelse(life_sq < 7, life_sq+1,0), life_sq = ifelse(life_sq <= 1, NA, life_sq))
test <- test %>% mutate(strange_life_sq = ifelse(life_sq <= 1, life_sq+1,0), strange_life_sq= ifelse(is.na(strange_life_sq),0,strange_life_sq), life_sq = ifelse(life_sq <= 1, NA, life_sq))
## build years in kitch_sq
train <- train %>% mutate(build_year = ifelse(kitch_sq>1900,kitch_sq,build_year))
test <- test %>% mutate(build_year = ifelse(kitch_sq>1900,kitch_sq,build_year))
## sometimes kitch_sq >= full_sq
train <- train %>% mutate(kitch_sq = ifelse(kitch_sq >= full_sq, NA, kitch_sq))
test <- test %>% mutate(kitch_sq = ifelse(kitch_sq >= full_sq, NA, kitch_sq))
### kitch_sq >= life_sq
train <- train %>% mutate(kitch_sq = ifelse(kitch_sq >= life_sq, NA, kitch_sq))
test <- test %>% mutate(kitch_sq = ifelse(kitch_sq >= life_sq, NA, kitch_sq))
train <- train %>% mutate(strange_kitch_sq = ifelse(kitch_sq <= 1, kitch_sq+1,0),kitch_sq = ifelse(kitch_sq <= 1, NA, kitch_sq))
test <- test %>% mutate(strange_kitch_sq = ifelse(kitch_sq <= 1, kitch_sq+1,0),kitch_sq = ifelse(kitch_sq <= 1, NA, kitch_sq))
train <- train %>% mutate(num_room = ifelse(num_room >= 10 | num_room <= 0, NA, num_room))
test <- test %>% mutate(num_room = ifelse(num_room >= 10 | num_room <= 0, NA, num_room))
train <- train %>% mutate(build_year = ifelse(build_year > 1000000, mean(as.numeric(c(str_sub(build_year,1,4),str_sub(build_year,5,8)))), build_year))
train <- train %>% mutate(build_year = ifelse(build_year > 2900, as.numeric(str_c("1",str_sub(build_year,2,4))), build_year))
train <- train %>% mutate(strange_build_year = ifelse(build_year <= 1, build_year+1,0), build_year = ifelse(build_year < 1800, NA, build_year))
test <- test %>% mutate(strange_build_year = ifelse(build_year <= 1, build_year+1,0), build_year = ifelse(build_year < 1800, NA, build_year))
train <- train %>% mutate(floor = ifelse(floor > 45, round(floor/10), floor))
test <- test %>% mutate(floor = ifelse(floor > 45, round(floor/10), floor))
### to do: probably some floors of 1 are not real information
train <- train %>% mutate(max_floor = ifelse(max_floor>100, as.numeric(str_sub(max_floor,2,3)),max_floor))
train <- train %>% mutate(strange_max_floor = ifelse(max_floor <= 1, max_floor+1,0), max_floor = ifelse(max_floor > 60 | max_floor <=0, NA, max_floor))
test <- test %>% mutate(strange_max_floor = ifelse(max_floor <= 1, max_floor+1,0), max_floor = ifelse(max_floor > 60 | max_floor <=0, NA, max_floor))
train <- train %>% mutate(state= ifelse(state>10, round(state/10),state))
train <- train %>% mutate(state = factor(state, exclude=NULL))
test <- test %>% mutate(state = factor(state, exclude=NULL))
train <- train %>% mutate(material = ifelse(material == 3, NA, material), material=factor(material, exclude=NULL))
test <- test %>% mutate(material = ifelse(material == 3, NA, material), material=factor(material, exclude=NULL))
train <- train %>% mutate(product_type = factor(product_type, exclude=NULL))
test <- test %>% mutate(product_type = ifelse(is.na(product_type),"Investment",product_type))
test <- test %>% mutate(product_type = factor(product_type))
train <- train %>% mutate(sub_area = factor(sub_area, exclude=NULL))
test <- test %>% mutate(sub_area = factor(sub_area, exclude=NULL)) # only 145 Poselenie Klenovskoe not in test set
train <- train %>% mutate(school_education_centers_raion_pct = school_education_centers_raion/area_m*1e+06)
test <- test %>% mutate(school_education_centers_raion_pct = school_education_centers_raion/area_m*1e+06)
train <- train %>% mutate(school_education_centers_top_20_raion = ifelse(school_education_centers_top_20_raion>=1,1,0))
test <- test %>% mutate(school_education_centers_top_20_raion = ifelse(school_education_centers_top_20_raion>=1,1,0))
train <- train %>% mutate(hospital_beds_raion_pct = hospital_beds_raion/raion_popul)
test <- test %>% mutate(hospital_beds_raion_pct = hospital_beds_raion/raion_popul)
train <- train %>% mutate(healthcare_centers_raion_pct = healthcare_centers_raion/area_m*1e+06)
test <- test %>% mutate(healthcare_centers_raion_pct = healthcare_centers_raion/area_m*1e+06)
train <- train %>% mutate(university_top_20_raion = ifelse(university_top_20_raion>=1,1,0))
test <- test %>% mutate(university_top_20_raion = ifelse(university_top_20_raion>=1,1,0))
train <- train %>% mutate(sport_objects_raion_pct = sport_objects_raion/area_m*1e+06)
test <- test %>% mutate(sport_objects_raion_pct = sport_objects_raion/area_m*1e+06)
train <- train %>% mutate(additional_education_raion_pct = additional_education_raion/area_m*1e+06)
test <- test %>% mutate(additional_education_raion_pct = additional_education_raion/area_m*1e+06)
train <- train %>% mutate(culture_objects_top_25 = NULL, culture_objects_top_25_raion = ifelse(culture_objects_top_25_raion >=2, 2, ifelse(culture_objects_top_25_raion>=1,1,0)))
test <- test %>% mutate(culture_objects_top_25 = NULL, culture_objects_top_25_raion = ifelse(culture_objects_top_25_raion >=2, 2, ifelse(culture_objects_top_25_raion>=1,1,0)))
train <- train %>% mutate(shopping_centers_raion_pct = shopping_centers_raion/area_m*1e+06)
test <- test %>% mutate(shopping_centers_raion_pct = shopping_centers_raion/area_m*1e+06)
train <- train %>% mutate(office_raion = office_raion/area_m*1e+06)
test <- test %>% mutate(office_raion = office_raion/area_m*1e+06)
train <- train %>% mutate(thermal_power_plant_raion = as.numeric(as.factor(thermal_power_plant_raion)))
test <- test %>% mutate(thermal_power_plant_raion = as.numeric(as.factor(thermal_power_plant_raion)))
train <- train %>% mutate(incineration_raion = as.numeric(as.factor(incineration_raion)))
test <- test %>% mutate(incineration_raion = as.numeric(as.factor(incineration_raion)))
train <- train %>% mutate(oil_chemistry_raion = as.numeric(as.factor(oil_chemistry_raion)))
test <- test %>% mutate(oil_chemistry_raion = as.numeric(as.factor(oil_chemistry_raion)))
train <- train %>% mutate(radiation_raion = as.numeric(as.factor(radiation_raion)))
test <- test %>% mutate(radiation_raion = as.numeric(as.factor(radiation_raion)))
train <- train %>% mutate(railroad_terminal_raion = as.numeric(as.factor(railroad_terminal_raion)))
test <- test %>% mutate(railroad_terminal_raion = as.numeric(as.factor(railroad_terminal_raion)))
train <- train %>% mutate(big_market_raion = as.numeric(as.factor(big_market_raion)))
test <- test %>% mutate(big_market_raion = as.numeric(as.factor(big_market_raion)))
train <- train %>% mutate(nuclear_reactor_raion = as.numeric(as.factor(nuclear_reactor_raion)))
test <- test %>% mutate(nuclear_reactor_raion = as.numeric(as.factor(nuclear_reactor_raion)))
train <- train %>% mutate(detention_facility_raion = as.numeric(as.factor(detention_facility_raion)))
test <- test %>% mutate(detention_facility_raion = as.numeric(as.factor(detention_facility_raion)))
sapply(train, function(x) !is.double(x))
names(sapply(train, function(x) !is.double(x)))
names(sapply(train, function(x) !is.double(x))==T)
sapply(train, function(x) !is.double(x)))
sapply(train, function(x) !is.double(x))
str(sapply(train, function(x) !is.double(x)))
train[sapply(train, function(x) !is.double(x))]
train[,sapply(train, function(x) !is.double(x))]
dim(train[,sapply(train, function(x) !is.double(x))])
names(train[,sapply(train, function(x) !is.double(x))])
test_doubles <- names(test[,sapply(test,is.double)])
test_doubles
train_notdoubles <- names(train[,sapply(train, function(x) !is.double(x))])
train_notdoubles
c(train_notdoubles,test_doubles)
duplicated(c(train_notdoubles,test_doubles))
allnames <- c(train_notdoubles,test_doubles)
cols <- allnames[duplicated(allnames)]
cols
